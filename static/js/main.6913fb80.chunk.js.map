{"version":3,"sources":["API.ts","IntakeFormPage.tsx","IntakeReport.tsx","Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOJJTestBase","Airtable","apiKey","process","base","Title","Typography","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","steps","title","content","IntakeForm","onSubmit","React","useState","current","setCurrent","name","initialValues","SSN","resolved","gov","WC","hasPD","PDResolved","airbags","onFinish","clientName","phoneNumber","DOB","whoIntake","DOI","HIUsed","LW","treatment","injuries","priorMed","referred","p","DOIDate","Date","intakeDate","format","client","HI","SOL","set","month","getMonth","date","year","getFullYear","email","address","spouse","injuriesIntake","join","priors","PIPName","AdverseName","PIPPolicyNumber","AdverseClaimNumber","AdversePolicyNumber","PIPUMUIMClaimNo","PIPClaimNumber","AdverseMMY","passengers","emergencyContactName","emergencyContactPhone","emergencyContactRelation","PRCaseNo","isGov","languages","language","timeOfIncident","PRCityAndInfo","theoryOfLiab","knownProviders","PIPCoverage","howHear","PIPMMY","PIPPhone","AdversePhone","caseNotes","criminalHist","loanOwner","employer","wage","tow","create","fields","Client","Priors","undefined","Spoken","Status","err","records","console","error","forEach","record","log","getId","createRecord","message","success","onFinishFailed","errorInfo","progressDot","size","map","item","Step","style","display","Item","level","label","options","value","mode","showToday","TextArea","autoSize","type","Group","margin","onClick","length","htmlType","s","StyleSheet","page","flexDirection","padding","sep","marginBottom","text","fontSize","borderBottom","borderBottomColor","section","flexGrow","tableCell","textAlign","tableHead","tableCont","paddingBottom","IntakeReport","HHS","flex","data","getContent","r","Login","setIsLoggedIn","code","setCode","codeRef","useRef","codeInvalid","setCodeInvalid","useEffect","focus","className","onChange","ref","App","isLoggedIn","isIntakeReportPage","setIsIntakeReportPage","setClient","document","fileName","replaceAll","blob","url","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6913fb80.chunk.js","sourcesContent":["import Airtable from 'airtable'\nimport { CreateRecordParams } from './types'\n\nconst LOJJTestBase = new Airtable({\n  apiKey: process.env.REACT_APP_AIRTABLE_API_KEY,\n}).base(process.env.REACT_APP_AIRTABLE_BASEY_TEST)\n\nexport const createRecord = ({\n  clientName,\n  DOB,\n  DOI,\n  HI,\n  LW,\n  SOL,\n  injuriesIntake,\n  phoneNumber,\n  priors,\n  PDResolved,\n  isGov,\n  knownProviders,\n  referred,\n  intakeDate,\n  caseNotes,\n}: CreateRecordParams) =>\n  LOJJTestBase('All Clients').create(\n    [\n      {\n        fields: {\n          Client: clientName,\n          'Case Notes': caseNotes,\n          'Phone Number': phoneNumber,\n          'D.O.I.': DOI,\n          'D.O.B.': DOB,\n          'S.O.L.': SOL,\n          'HI? On Notice?': HI,\n          'LW?': LW,\n          'Injuries - Intake': injuriesIntake,\n          Priors: priors,\n          'PD Resolved?': PDResolved,\n          'Known Providers': knownProviders,\n          'Referred By/To': referred,\n          'Intake Date': intakeDate,\n          'Govt Entity?': isGov ? 'Yes' : undefined,\n          Spoken: intakeDate,\n          'PIP Exhausted': 'No',\n          'PIP App': 'Not Done',\n          Status: '1',\n        },\n      },\n    ],\n    function (err: any, records: any) {\n      if (err) {\n        console.error(err)\n        return\n      }\n      records.forEach(function (record: any) {\n        console.log(record.getId())\n      })\n    }\n  )\n","import {\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  message,\n  Radio,\n  Select,\n  Steps,\n  Typography\n} from 'antd'\nimport { format, set } from 'date-fns'\nimport React, { FC } from 'react'\nimport { Input as RainbowInput } from 'react-rainbow-components'\nimport { createRecord } from './API'\nimport { ClientViewModel } from './types'\n\nconst { Title } = Typography\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n}\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n}\n\nconst steps = [\n  {\n    title: 'Client',\n    content: 'client',\n  },\n  {\n    title: 'Accident',\n    content: 'accident',\n  },\n  {\n    title: 'Insurance',\n    content: 'insurance',\n  },\n  {\n    title: 'Medical',\n    content: 'medical',\n  },\n  {\n    title: 'Other',\n    content: 'other',\n  },\n]\n\nconst IntakeForm: FC<{ onSubmit: Function }> = ({ onSubmit }) => {\n  const [current, setCurrent] = React.useState(0)\n\n  const next = () => {\n    setCurrent(current + 1)\n  }\n\n  const prev = () => {\n    setCurrent(current - 1)\n  }\n\n  const onFinish = ({\n    clientName,\n    gov,\n    phoneNumber,\n    DOB,\n    whoIntake,\n    DOI,\n    hasPD,\n    PDResolved,\n    HIUsed,\n    LW,\n    treatment,\n    injuries,\n    priorMed,\n    referred,\n    ...p\n  }: any) => {\n    const DOIDate = new Date(DOI)\n    const intakeDate = format(new Date(), 'MM/dd/yyyy')\n    const client: ClientViewModel = {\n      DOB: format(new Date(DOB), 'MM/dd/yyyy'),\n      DOI: format(DOIDate, 'MM/dd/yyyy'),\n      HI: HIUsed,\n      LW,\n      SOL: format(\n        set(DOIDate, {\n          month: DOIDate.getMonth(),\n          date: 1,\n          year: DOIDate.getFullYear() + 5,\n        }),\n        'MM/dd/yyyy'\n      ),\n      email: p.email,\n      clientName,\n      SSN: p.SSN,\n      address: p.address,\n      spouse: p.spouse,\n      injuriesIntake: injuries?.join('; '),\n      phoneNumber,\n      priors: priorMed?.join('; '),\n      PIPName: p.PIPName,\n      AdverseName: p.AdverseName,\n      PIPPolicyNumber: p.PIPPolicyNumber,\n      AdverseClaimNumber: p.AdverseClaimNumber,\n      AdversePolicyNumber: p.AdversePolicyNumber,\n      PIPUMUIMClaimNo: p.PIPClaimNumber,\n      AdverseMMY: p.AdverseMMY,\n      passengers: p.passengers?.join('; '),\n      resolved: p.resolved,\n      emergencyContactName: p.emergencyContactName,\n      emergencyContactPhone: p.emergencyContactPhone,\n      emergencyContactRelation: p.emergencyContactRelation,\n      gov: gov,\n      PDResolved,\n      airbags: p.airbags,\n      hasPD,\n      PRCaseNo: p.PRCaseNo,\n      WC: p.WC,\n      isGov: gov === 'Yes',\n      languages: p.language?.join(' / '),\n      timeOfIncident: p.timeOfIncident,\n      PRCityAndInfo: p.PRCityAndInfo,\n      theoryOfLiab: p.theoryOfLiab,\n      knownProviders: treatment?.join('; '),\n      PIPCoverage: p.PIPCoverage,\n      howHear: p.howHear,\n      PIPMMY: p.PIPMMY,\n      PIPPhone: p.PIPPhone,\n      AdversePhone: p.AdversePhone,\n      treatment: treatment?.join('; '),\n      caseNotes: `${intakeDate} (Did Intake - ${whoIntake});`,\n      criminalHist: p.criminalHist,\n      referred,\n      intakeDate,\n      whoIntake,\n      loanOwner: p.loanOwner,\n      employer: p.employer,\n      wage: p.wage,\n      tow: p.tow,\n    }\n    createRecord(client)\n    onSubmit(client)\n    message.success('Client added to Needles and Intake added to drive')\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <Form\n      {...formItemLayout}\n      name='basic'\n      initialValues={{\n        SSN: '000000000',\n        resolved: 'No',\n        gov: 'No',\n        WC: 'No',\n        hasPD: 'Yes',\n        PDResolved: 'No',\n        airbags: 'No',\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Steps progressDot current={current} size='small'>\n        {steps.map((item) => (\n          <Steps.Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n\n      <div\n        style={{\n          display: steps[current].content === 'client' ? 'block' : 'none',\n        }}\n      >\n        {/* Client Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Client Information</Title>\n        </Form.Item>\n        <Form.Item label='Client Name' name='clientName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone Number' name='phoneNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Email' name='email'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Language' name='language'>\n          <Select\n            options={[\n              { label: 'Spanish', value: 'Spanish' },\n              { label: 'English', value: 'English' },\n            ]}\n            mode='tags'\n          />\n        </Form.Item>\n        <Form.Item label='D.O.B' name='DOB'>\n          <DatePicker format='MM/DD/YYYY' showToday={false} />\n        </Form.Item>\n        <Form.Item label='SSN' name='SSN'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Address' name='address'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Legal Spouse Name' name='spouse'>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={5}>Emergency Contact</Title>\n        </Form.Item>\n        <Form.Item label='Contact Name' name='emergencyContactName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone' name='emergencyContactPhone'>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label='Relation (e.g. Mom, Spouse, Brother)'\n          name='emergencyContactRelation'\n        >\n          <Input />\n        </Form.Item>\n        {/* Client Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'accident' ? 'block' : 'none',\n        }}\n      >\n        {/* Accident Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Accident Information</Title>\n        </Form.Item>\n        <Form.Item label='Theory Of Liability' name='theoryOfLiab'>\n          <Input.TextArea autoSize />\n        </Form.Item>\n        <Form.Item label='D.O.I' name='DOI'>\n          <DatePicker format='MM/DD/YYYY' />\n        </Form.Item>\n        <Form.Item label='Passengers' name='passengers'>\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item label='PR City and Info' name='PRCityAndInfo'>\n          <Input.TextArea autoSize />\n        </Form.Item>\n        <Form.Item label='PR Case Number' name='PRCaseNo'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Time Of Incident' name='timeOfIncident'>\n          <RainbowInput name='timeOfIncident' type='time' />\n        </Form.Item>\n        <Form.Item label='Is Already Resolved?' name='resolved'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Government Entity?' name='gov'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Workers Comp?' name='WC'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Has PD?' name='hasPD'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Is PD Already Resolved?' name='PDResolved'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Did Airbags Deploy?' name='airbags'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        {/* Accident Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'insurance' ? 'block' : 'none',\n        }}\n      >\n        {/* Isurance Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Insurance Information</Title>\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={5}>PIP</Title>\n        </Form.Item>\n        <Form.Item label='Insurance Name' name='PIPName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone Number' name='PIPPhone'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Policy Number' name='PIPPolicyNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Claim Number' name='PIPClaimNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Make/Model/Yr' name='PIPMMY'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Kind of Pip Coverage' name='PIPCoverage'>\n          <Radio.Group>\n            <Radio value='Full'>Full</Radio>\n            <Radio value='Simple'>Simple</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={5}>Adverse</Title>\n        </Form.Item>\n        <Form.Item label='Insurance Name' name='AdverseName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone Number' name='AdversePhone'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Policy Number' name='AdversePolicyNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Claim Number' name='AdverseClaimNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Make/Model/Yr' name='AdverseMMY'>\n          <Input />\n        </Form.Item>\n        {/* Insurance Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'medical' ? 'block' : 'none',\n        }}\n      >\n        {/* Medical Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Medical Information</Title>\n        </Form.Item>\n        <Form.Item label='HI Used' name='HIUsed'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Injuries' name='injuries'>\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item\n          label='Treatment and dates (amb/hospital/MRI?)'\n          name='treatment'\n        >\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item label='Prior Med History' name='priorMed'>\n          <Select mode='tags' />\n        </Form.Item>\n        {/* Medical Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'other' ? 'block' : 'none',\n        }}\n      >\n        {/* Medical Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Other Information</Title>\n        </Form.Item>\n        <Form.Item label='Referred to/by' name='referred'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='How did you hear about us?' name='howHear'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Criminal History' name='criminalHist'>\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item label='HHS' name='HHS'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='LW?' name='LW'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n            <Radio value='Maybe'>Maybe</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Employer (in cash?)' name='employer'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Wage' name='wage'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Loan/owner of car?' name='loanOwner'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Towed/tow yard?' name='tow'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Who did the intake?' name='whoIntake'>\n          <Input />\n        </Form.Item>\n        {/* Medical Area End */}\n      </div>\n\n      {current > 0 && (\n        <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n          Previous\n        </Button>\n      )}\n      {current === steps.length - 1 && (\n        <Form.Item {...tailFormItemLayout}>\n          <Button type='primary' htmlType='submit'>\n            Submit\n          </Button>\n        </Form.Item>\n      )}\n      {current < steps.length - 1 && (\n        <Button type='primary' onClick={() => next()}>\n          Next\n        </Button>\n      )}\n    </Form>\n  )\n}\n\nexport default IntakeForm\n","import {\n  DataTableCell,\n  Table,\n  TableBody,\n  TableCell,\n  TableHeader\n} from '@david.kucsai/react-pdf-table'\nimport { Document, Page, StyleSheet, Text, View } from '@react-pdf/renderer'\nimport React, { FC } from 'react'\nimport { ClientViewModel } from './types'\n\nconst IntakeReport: FC<{ client: ClientViewModel }> = ({ client }) => {\n  const {\n    clientName,\n    languages,\n    DOB,\n    DOI,\n    SSN,\n    phoneNumber,\n    address,\n    email,\n    spouse,\n    emergencyContactName = '',\n    emergencyContactPhone = '',\n    emergencyContactRelation = '',\n    PIPUMUIMClaimNo,\n    PIPName,\n    PIPPhone,\n    PIPPolicyNumber,\n    AdverseClaimNumber,\n    AdverseName,\n    AdversePhone,\n    AdversePolicyNumber,\n    HI,\n    LW,\n    injuriesIntake,\n    priors,\n    AdverseMMY,\n    PDResolved,\n    PIPCoverage,\n    referred,\n    PRCaseNo,\n    PRCityAndInfo,\n    WC,\n    airbags,\n    gov,\n    hasPD,\n    passengers,\n    theoryOfLiab,\n    timeOfIncident,\n    PIPMMY,\n    HHS,\n    criminalHist,\n    employer,\n    howHear,\n    wage,\n    whoIntake,\n    loanOwner,\n    tow,\n    treatment,\n  } = client\n  return (\n    <Document>\n      <Page size='A4' style={s.page}>\n        {/* pip */}\n\n        <Text style={s.title}>Client</Text>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Full name: {clientName}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Language: {languages}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Phone: {phoneNumber}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Email: {email}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>D.O.B: {DOB}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>SSN: {SSN}</Text>\n            </View>\n          </View>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Legal spouse: {spouse}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>\n                Emergency contact:{' '}\n                {`${emergencyContactName} ${\n                  emergencyContactRelation\n                    ? `(${emergencyContactRelation})`\n                    : ''\n                } ${emergencyContactPhone}`}\n              </Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Address: {address}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Diagram(maps) and # of cars involved: </Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={{ marginBottom: '60px' }} />\n\n        <Text style={s.title}>Insurance</Text>\n\n        <View style={s.tableCont}>\n          <Table\n            data={[\n              {\n                PIPName,\n                PIPPhone,\n                PIPPolicyNumber,\n                PIPUMUIMClaimNo,\n              },\n            ]}\n          >\n            <TableHeader>\n              <TableCell style={s.tableHead}>PIP</TableCell>\n              <TableCell style={s.tableHead}>Phone Number</TableCell>\n              <TableCell style={s.tableHead}>Policy Number</TableCell>\n              <TableCell style={s.tableHead}>Claim Number</TableCell>\n            </TableHeader>\n            <TableBody>\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPName}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPPhone}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPPolicyNumber}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPUMUIMClaimNo}\n              />\n            </TableBody>\n          </Table>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Make/Model/yr: {PIPMMY}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Coverage: {PIPCoverage}</Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Liab */}\n        <View style={s.tableCont}>\n          <Table\n            data={[\n              {\n                AdverseName,\n                AdversePhone,\n                AdversePolicyNumber,\n                AdverseClaimNumber,\n              },\n            ]}\n          >\n            <TableHeader>\n              <TableCell style={s.tableHead}>Adverse Ins</TableCell>\n              <TableCell style={s.tableHead}>Phone Number</TableCell>\n              <TableCell style={s.tableHead}>Policy Number</TableCell>\n              <TableCell style={s.tableHead}>Claim Number</TableCell>\n            </TableHeader>\n            <TableBody>\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdverseName}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdversePhone}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdversePolicyNumber}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdverseClaimNumber}\n              />\n            </TableBody>\n          </Table>\n\n          <View style={s.sep} />\n          <Text style={s.text}>Make/Model/yr: {AdverseMMY}</Text>\n        </View>\n\n        <View style={{ marginBottom: '8px' }} />\n\n        <Text style={s.title}>Accident</Text>\n        <View>\n          <Text style={s.text}>Theory of liability: {theoryOfLiab}</Text>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 3 }}>\n              <Text style={s.text}>Passengers: {passengers}</Text>\n            </View>\n            <View style={{ flex: 1 }} />\n            <View style={{ flex: 2 }}>\n              <Text style={s.text}>D.O.I: {DOI}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 3 }}>\n              <Text style={s.text}>PR info: {PRCityAndInfo}</Text>\n            </View>\n            <View style={{ flex: 1 }} />\n            <View style={{ flex: 2 }}>\n              <Text style={s.text}>PR case #: {PRCaseNo}</Text>\n            </View>\n          </View>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Has PD?: {hasPD}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>PD resolved?: {PDResolved}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Time: {timeOfIncident}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Airbags deployed?: {airbags}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Is WC?: {WC}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Is Gov?: {gov}</Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={{ marginBottom: '8px' }} />\n\n        <Text style={s.title}>Medical</Text>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 2 }}>\n            <Text style={s.text}>HI: {HI}</Text>\n          </View>\n          <View style={{ flex: 3 }}>\n            <Text style={s.text}>Pior medical history: {priors}</Text>\n          </View>\n          <View style={{ flex: 1 }} />\n        </View>\n        <Text style={s.text}>Injuries: {injuriesIntake}</Text>\n        <Text style={s.text}>Treatment: {treatment}</Text>\n\n        <View style={{ marginBottom: '8px' }} />\n\n        <Text style={s.title}>Other</Text>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>LW?: {LW}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Employer: {employer}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Wage: {wage}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Referred to/by: {referred}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>HHS: {HHS}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Intake by: {whoIntake}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 3 }}>\n              <Text style={s.text}>Criminal hist: {criminalHist}</Text>\n            </View>\n            <View style={{ flex: 1 }} />\n            <View style={{ flex: 2 }}>\n              <Text style={s.text}>How did you hear about us?: {howHear}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Loan/owner of car? {loanOwner}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>\n                Towed/tow yard?:\n                {tow}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\n// Create styles\nconst s = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    padding: '8px',\n  },\n  sep: {\n    marginBottom: '5px',\n  },\n  text: {\n    fontSize: 12,\n    marginBottom: '8px',\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: '10px',\n    borderBottom: 1,\n    borderBottomColor: 'gainsboro',\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  tableCell: {\n    padding: '2px 0 2px 4px',\n    textAlign: 'center',\n    fontSize: 12,\n  },\n  tableHead: {\n    padding: '2px 0 2px 4px',\n    textAlign: 'center',\n    fontSize: 12,\n  },\n  tableCont: {\n    paddingBottom: '8px',\n  },\n})\n\nexport default IntakeReport\n","import { message } from 'antd'\nimport React, { FC, useEffect, useRef, useState } from 'react'\nimport { CodeInput } from 'react-rainbow-components'\n\ninterface LoginProps {\n  setIsLoggedIn: Function\n}\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 8 },\n}\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 8 },\n}\n\nconst Login: FC<LoginProps> = ({ setIsLoggedIn }) => {\n  const [code, setCode] = useState<string>('')\n  const codeRef = useRef<any>(null)\n  const [codeInvalid, setCodeInvalid] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (codeRef) {\n      codeRef.current.focus()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (code.length === 4) {\n      if (code === '3729') {\n        setCodeInvalid(false)\n        message.success('Welcome Clay')\n        return setIsLoggedIn(true)\n      } else if (code === '01640') {\n        setCodeInvalid(false)\n        message.success('Welcome Leslie')\n        return setIsLoggedIn(true)\n      } else if (code === '1934') {\n        setCodeInvalid(false)\n        message.success('Welcome Jacob')\n        return setIsLoggedIn(true)\n      } else {\n        setCodeInvalid(true)\n      }\n    } else {\n      setCodeInvalid(false)\n    }\n  }, [code, setIsLoggedIn])\n\n  return (\n    <div className='login_root'>\n      <CodeInput\n        label='Enter your Code'\n        error={codeInvalid && 'Looks like the code is invalid'}\n        onChange={setCode}\n        value={code}\n        ref={codeRef}\n      />\n    </div>\n  )\n}\n\nexport default Login\n","import { PDFDownloadLink } from '@react-pdf/renderer'\nimport { Button } from 'antd'\nimport React, { useState } from 'react'\nimport './App.css'\nimport IntakeForm from './IntakeFormPage'\nimport IntakeReport from './IntakeReport'\nimport Login from './Login'\nimport { ClientViewModel } from './types'\n\n//not working\n//language\n//pip claim no\n//Has PD\n//PD resolved\n//isGov\n//PR Case\n//Treatment\n//Criminal Hist\n//Exployer\n//HHS\n//Wage\n//Intake by\n//Towed\n//loan owner of car\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false)\n  const [isIntakeReportPage, setIsIntakeReportPage] = useState<boolean>(false)\n  const [client, setClient] = useState<ClientViewModel>({\n    DOB: '2/3/4',\n    DOI: '3/4/5',\n    HI: 'Medicaid',\n    languages: 'Spanish / English',\n    LW: 'Maybe',\n    SOL: '3/4/5',\n    email: 'test@test.com',\n    clientName: 'John E. Cena',\n    SSN: '000000000',\n    address: '508 E Outlook Cv Draper, UT 84020',\n    spouse: 'Michelle Obama',\n    injuriesIntake: 'Knee; Chest; Right Arm; Left Shoulder; Dizzines',\n    phoneNumber: '345-434-4343',\n    priors: '2017 MVA; 2015 Knee Surgery;',\n    PIPName: 'Allstate',\n    AdverseName: 'Geico',\n    PIPPolicyNumber: 'S9F8M9999888FJ',\n    AdverseClaimNumber: '98DF0000000HF8800',\n    AdversePolicyNumber: '834JF',\n    PIPUMUIMClaimNo: '845304849',\n    AdverseMMY: '2013 NISSAN SUBURU',\n    passengers: 'King Krule (Son)',\n    resolved: 'No',\n    emergencyContactName: 'Barack Obama',\n    emergencyContactPhone: '293-383-3833',\n    emergencyContactRelation: 'Friend',\n    gov: 'No',\n    PDResolved: 'No',\n    airbags: 'Yes',\n    hasPD: 'Yes',\n    WC: 'No',\n    timeOfIncident: '12:32 AM',\n    PRCityAndInfo:\n      'Located in West Valley City. It has been requested and we are waiting',\n    theoryOfLiab: 'P was heading west when D rear-ended him',\n    PIPCoverage: 'Full',\n    howHear: 'Radio',\n    PIPMMY: 'TOY CORR 2005',\n    PIPPhone: '801-233-2222',\n    AdversePhone: '343-2344-2345',\n    treatment:\n      'USMRI (1/3/20); Axcess Chiro (12/7/20); Health for Life (1/18/21)',\n  })\n\n  const onSubmit = (client: ClientViewModel) => {\n    console.log(client, 'client')\n    setClient(client)\n    setIsIntakeReportPage(true)\n  }\n\n  return (\n    <div className='App'>\n      {/* <IntakeReport client={client} /> */}\n      {!isIntakeReportPage ? (\n        isLoggedIn ? (\n          <IntakeForm onSubmit={onSubmit} />\n        ) : (\n          <Login setIsLoggedIn={setIsLoggedIn} />\n        )\n      ) : (\n        <div>\n          <div>\n            <Button>\n              <PDFDownloadLink\n                document={<IntakeReport client={client} />}\n                fileName={`${client.clientName.replaceAll(' ', '_')}.pdf`}\n              >\n                {({ blob, url, loading, error }) =>\n                  loading ? 'Loading document...' : 'Download Report'\n                }\n              </PDFDownloadLink>\n            </Button>\n            or\n            <Button onClick={() => setIsIntakeReportPage(false)}>\n              New Intake\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}