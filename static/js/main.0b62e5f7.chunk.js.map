{"version":3,"sources":["API.ts","IntakeFormPage.tsx","IntakeReport.tsx","Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LOJJTestBase","Airtable","apiKey","process","base","Title","Typography","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","steps","title","content","IntakeForm","onSubmit","defaultValues","useState","current","setCurrent","DOBState","setDOBState","DOIState","setDOIState","timeOfIncidentState","settimeOfIncidentState","useEffect","DOI","timeOfIncident","name","initialValues","SSN","gov","WC","hasPD","PDResolved","airbags","theoryOfLiab","PRCityAndInfo","PRCaseNo","resolved","PIPName","PIPPhone","PIPPolicyNumber","PIPClaimNumber","PIPUMUIMClaimNo","PIPMMY","PIPCoverage","AdverseName","AdversePhone","AdversePolicyNumber","AdverseClaimNumber","AdverseMMY","referred","howHear","loanOwner","tow","whoIntake","onFinish","clientName","phoneNumber","DOB","HIUsed","LW","treatment","injuries","priorMed","p","DOIDate","Date","intakeDate","format","commonCaseData","SOL","set","month","getMonth","date","year","getFullYear","isGov","client","HI","email","address","spouse","injuriesIntake","join","priors","passengers","emergencyContactName","emergencyContactPhone","emergencyContactRelation","languages","language","knownProviders","caseNotes","criminalHist","employer","wage","create","fields","Client","Priors","undefined","Spoken","Status","err","records","console","error","forEach","record","log","getId","createRecord","message","success","onFinishFailed","errorInfo","progressDot","size","map","item","Step","style","display","Item","level","label","options","value","mode","type","onChange","e","target","TextArea","autoSize","Group","margin","onClick","length","htmlType","s","StyleSheet","page","flexDirection","padding","sep","marginBottom","text","fontSize","borderBottom","borderBottomColor","section","flexGrow","tableCell","textAlign","tableHead","tableCont","paddingBottom","IntakeReport","HHS","flex","data","getContent","r","Login","setIsLoggedIn","login","code","setCode","codeRef","useRef","codeInvalid","setCodeInvalid","focus","className","ref","App","isLoggedIn","setCurrentUser","isIntakeReportPage","setIsIntakeReportPage","setClient","setDefaultValues","document","fileName","replaceAll","blob","url","loading","username","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b62e5f7.chunk.js","sourcesContent":["import Airtable from 'airtable'\nimport { CreateRecordParams } from './types'\n\nconst LOJJTestBase = new Airtable({\n  apiKey: process.env.REACT_APP_AIRTABLE_API_KEY,\n}).base(process.env.REACT_APP_AIRTABLE_BASE)\n\nexport const createRecord = ({\n  clientName,\n  DOB,\n  DOI,\n  HI,\n  LW,\n  SOL,\n  injuriesIntake,\n  phoneNumber,\n  priors,\n  PDResolved,\n  isGov,\n  knownProviders,\n  referred,\n  intakeDate,\n  caseNotes,\n}: CreateRecordParams) =>\n  LOJJTestBase('All Clients').create(\n    [\n      {\n        fields: {\n          Client: clientName,\n          'Case Notes': caseNotes,\n          'Phone Number': phoneNumber,\n          'D.O.I.': DOI,\n          'D.O.B.': DOB,\n          'S.O.L.': SOL,\n          'HI? On Notice?': HI,\n          'LW?': LW,\n          'Injuries - Intake': injuriesIntake,\n          Priors: priors,\n          'PD Resolved?': PDResolved,\n          'Known Providers': knownProviders,\n          'Referred By/To': referred,\n          'Intake Date': intakeDate,\n          'Govt Entity?': isGov ? 'Yes' : undefined,\n          Spoken: intakeDate,\n          'PIP Exhausted': 'No',\n          'PIP App': 'Not Done',\n          Status: '1',\n        },\n      },\n    ],\n    function (err: any, records: any) {\n      if (err) {\n        console.error(err)\n        return\n      }\n      records.forEach(function (record: any) {\n        console.log(record.getId())\n      })\n    }\n  )\n","import {\n  Button,\n  Form,\n  Input,\n  message,\n  Radio,\n  Select,\n  Steps,\n  Typography\n} from 'antd'\nimport { format, set } from 'date-fns'\nimport React, { FC, useEffect, useState } from 'react'\nimport { Input as RainbowInput } from 'react-rainbow-components'\nimport { createRecord } from './API'\nimport { ClientViewModel, CommonCaseData } from './types'\n\nconst { Title } = Typography\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n}\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n}\n\nconst steps = [\n  {\n    title: 'Client',\n    content: 'client',\n  },\n  {\n    title: 'Accident',\n    content: 'accident',\n  },\n  {\n    title: 'Insurance',\n    content: 'insurance',\n  },\n  {\n    title: 'Medical',\n    content: 'medical',\n  },\n  {\n    title: 'Other',\n    content: 'other',\n  },\n]\n\nconst IntakeForm: FC<{ onSubmit: Function; defaultValues: CommonCaseData }> = ({\n  onSubmit,\n  defaultValues,\n}) => {\n  const [current, setCurrent] = useState(0)\n  const [DOBState, setDOBState] = useState<string>()\n  const [DOIState, setDOIState] = useState<string>()\n  const [timeOfIncidentState, settimeOfIncidentState] = useState<string>()\n\n  useEffect(() => {\n    setDOIState(defaultValues?.DOI)\n    settimeOfIncidentState(defaultValues?.timeOfIncident)\n  }, [defaultValues])\n\n  const next = () => {\n    setCurrent(current + 1)\n  }\n\n  const prev = () => {\n    setCurrent(current - 1)\n  }\n\n  const onFinish = ({\n    clientName,\n    gov,\n    phoneNumber,\n    DOB,\n    whoIntake,\n    DOI,\n    hasPD,\n    PDResolved,\n    HIUsed,\n    LW,\n    treatment,\n    injuries,\n    priorMed,\n    referred,\n    ...p\n  }: any) => {\n    const DOIDate = new Date(DOI)\n    const intakeDate = format(new Date(), 'MM/dd/yyyy')\n    const commonCaseData: CommonCaseData = {\n      DOI: format(DOIDate, 'MM/dd/yyyy'),\n      SOL: format(\n        set(DOIDate, {\n          month: DOIDate.getMonth(),\n          date: 1,\n          year: DOIDate.getFullYear() + 5,\n        }),\n        'MM/dd/yyyy'\n      ),\n      PIPName: p.PIPName,\n      AdverseName: p.AdverseName,\n      PIPPolicyNumber: p.PIPPolicyNumber,\n      AdverseClaimNumber: p.AdverseClaimNumber,\n      AdversePolicyNumber: p.AdversePolicyNumber,\n      PIPUMUIMClaimNo: p.PIPClaimNumber,\n      AdverseMMY: p.AdverseMMY,\n      resolved: p.resolved,\n      gov: gov,\n      PDResolved,\n      airbags: p.airbags,\n      hasPD,\n      PRCaseNo: p.PRCaseNo,\n      WC: p.WC,\n      isGov: gov === 'Yes',\n      timeOfIncident: p.timeOfIncident,\n      PRCityAndInfo: p.PRCityAndInfo,\n      theoryOfLiab: p.theoryOfLiab,\n      PIPCoverage: p.PIPCoverage,\n      howHear: p.howHear,\n      PIPMMY: p.PIPMMY,\n      PIPPhone: p.PIPPhone,\n      AdversePhone: p.AdversePhone,\n      intakeDate,\n      loanOwner: p.loanOwner,\n      tow: p.tow,\n    }\n    const client: ClientViewModel = {\n      DOB: format(new Date(DOB), 'MM/dd/yyyy'),\n      HI: HIUsed,\n      LW,\n      email: p.email,\n      clientName,\n      SSN: p.SSN,\n      address: p.address,\n      spouse: p.spouse,\n      injuriesIntake: injuries?.join('; '),\n      phoneNumber,\n      priors: priorMed?.join('; '),\n      passengers: p.passengers?.join('; '),\n      emergencyContactName: p.emergencyContactName,\n      emergencyContactPhone: p.emergencyContactPhone,\n      emergencyContactRelation: p.emergencyContactRelation,\n      languages: p.language?.join(' / '),\n      knownProviders: treatment?.join('; '),\n      treatment: treatment?.join('; '),\n      caseNotes: `${intakeDate} (Did Intake - ${whoIntake});`,\n      criminalHist: p.criminalHist,\n      referred,\n      whoIntake,\n      employer: p.employer,\n      wage: p.wage,\n      ...commonCaseData,\n    }\n    createRecord(client)\n    onSubmit(client, commonCaseData)\n    message.success('Client added to Needles and Intake added to drive')\n  }\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <Form\n      {...formItemLayout}\n      name='basic'\n      initialValues={{\n        SSN: '000000000',\n        gov: defaultValues?.gov || 'No',\n        WC: defaultValues?.WC || 'No',\n        hasPD: defaultValues?.hasPD || 'Yes',\n        PDResolved: defaultValues?.PDResolved || 'No',\n        airbags: defaultValues?.airbags || 'No',\n        theoryOfLiab: defaultValues?.theoryOfLiab,\n        PRCityAndInfo: defaultValues?.PRCityAndInfo,\n        PRCaseNo: defaultValues?.PRCaseNo,\n        resolved: defaultValues?.resolved || 'No',\n        PIPName: defaultValues?.PIPName,\n        PIPPhone: defaultValues?.PIPPhone,\n        PIPPolicyNumber: defaultValues?.PIPPolicyNumber,\n        PIPClaimNumber: defaultValues?.PIPUMUIMClaimNo,\n        PIPMMY: defaultValues?.PIPMMY,\n        PIPCoverage: defaultValues?.PIPCoverage,\n        AdverseName: defaultValues?.AdverseName,\n        AdversePhone: defaultValues?.AdversePhone,\n        AdversePolicyNumber: defaultValues?.AdversePolicyNumber,\n        AdverseClaimNumber: defaultValues?.AdverseClaimNumber,\n        AdverseMMY: defaultValues?.AdverseMMY,\n        referred: defaultValues?.referred,\n        howHear: defaultValues?.howHear,\n        loanOwner: defaultValues?.loanOwner,\n        tow: defaultValues?.tow,\n        whoIntake: defaultValues?.whoIntake,\n      }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Steps progressDot current={current} size='small'>\n        {steps.map((item) => (\n          <Steps.Step key={item.title} title={item.title} />\n        ))}\n      </Steps>\n\n      <div\n        style={{\n          display: steps[current].content === 'client' ? 'block' : 'none',\n        }}\n      >\n        {/* Client Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Client Information</Title>\n        </Form.Item>\n        <Form.Item label='Client Name' name='clientName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone Number' name='phoneNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Email' name='email'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Language' name='language'>\n          <Select\n            options={[\n              { label: 'Spanish', value: 'Spanish' },\n              { label: 'English', value: 'English' },\n            ]}\n            mode='tags'\n          />\n        </Form.Item>\n        <Form.Item label='D.O.B' name='DOB'>\n          <RainbowInput\n            type='date'\n            value={DOBState}\n            onChange={(e) => setDOBState(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item label='SSN' name='SSN'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Address' name='address'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Legal Spouse Name' name='spouse'>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={5}>Emergency Contact</Title>\n        </Form.Item>\n        <Form.Item label='Contact Name' name='emergencyContactName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone' name='emergencyContactPhone'>\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label='Relation (e.g. Mom, Spouse, Brother)'\n          name='emergencyContactRelation'\n        >\n          <Input />\n        </Form.Item>\n        {/* Client Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'accident' ? 'block' : 'none',\n        }}\n      >\n        {/* Accident Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Accident Information</Title>\n        </Form.Item>\n        <Form.Item label='Theory Of Liability' name='theoryOfLiab'>\n          <Input.TextArea autoSize />\n        </Form.Item>\n        <Form.Item label='D.O.I' name='DOI'>\n          <RainbowInput\n            type='date'\n            value={DOIState}\n            onChange={(e) => setDOIState(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item label='Passengers' name='passengers'>\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item label='PR City and Info' name='PRCityAndInfo'>\n          <Input.TextArea autoSize />\n        </Form.Item>\n        <Form.Item label='PR Case Number' name='PRCaseNo'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Time Of Incident' name='timeOfIncident'>\n          <RainbowInput\n            name='timeOfIncident'\n            type='time'\n            value={timeOfIncidentState}\n            onChange={(e) => settimeOfIncidentState(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item label='Is Already Resolved?' name='resolved'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Government Entity?' name='gov'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Workers Comp?' name='WC'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Has PD?' name='hasPD'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Is PD Already Resolved?' name='PDResolved'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Did Airbags Deploy?' name='airbags'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        {/* Accident Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'insurance' ? 'block' : 'none',\n        }}\n      >\n        {/* Isurance Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Insurance Information</Title>\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={5}>PIP</Title>\n        </Form.Item>\n        <Form.Item label='Insurance Name' name='PIPName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone Number' name='PIPPhone'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Policy Number' name='PIPPolicyNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Claim Number' name='PIPClaimNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Make/Model/Yr' name='PIPMMY'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Kind of Pip Coverage' name='PIPCoverage'>\n          <Radio.Group>\n            <Radio value='Full'>Full</Radio>\n            <Radio value='Simple'>Simple</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={5}>Adverse</Title>\n        </Form.Item>\n        <Form.Item label='Insurance Name' name='AdverseName'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Phone Number' name='AdversePhone'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Policy Number' name='AdversePolicyNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Claim Number' name='AdverseClaimNumber'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Make/Model/Yr' name='AdverseMMY'>\n          <Input />\n        </Form.Item>\n        {/* Insurance Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'medical' ? 'block' : 'none',\n        }}\n      >\n        {/* Medical Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Medical Information</Title>\n        </Form.Item>\n        <Form.Item label='HI Used' name='HIUsed'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Injuries' name='injuries'>\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item\n          label='Treatment and dates (amb/hospital/MRI?)'\n          name='treatment'\n        >\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item label='Prior Med History' name='priorMed'>\n          <Select mode='tags' />\n        </Form.Item>\n        {/* Medical Area End */}\n      </div>\n\n      <div\n        style={{\n          display: steps[current].content === 'other' ? 'block' : 'none',\n        }}\n      >\n        {/* Medical Area Start */}\n        <Form.Item\n          wrapperCol={{\n            xs: {\n              span: 24,\n              offset: 0,\n            },\n            sm: {\n              span: 16,\n              offset: 8,\n            },\n          }}\n        >\n          <Title level={2}>Other Information</Title>\n        </Form.Item>\n        <Form.Item label='Referred to/by' name='referred'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='How did you hear about us?' name='howHear'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Criminal History' name='criminalHist'>\n          <Select mode='tags' />\n        </Form.Item>\n        <Form.Item label='HHS' name='HHS'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='LW?' name='LW'>\n          <Radio.Group>\n            <Radio value='Yes'>Yes</Radio>\n            <Radio value='No'>No</Radio>\n            <Radio value='Maybe'>Maybe</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label='Employer (in cash?)' name='employer'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Wage' name='wage'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Loan/owner of car?' name='loanOwner'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Towed/tow yard?' name='tow'>\n          <Input />\n        </Form.Item>\n        <Form.Item label='Who did the intake?' name='whoIntake'>\n          <Input />\n        </Form.Item>\n        {/* Medical Area End */}\n      </div>\n\n      {current > 0 && (\n        <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n          Previous\n        </Button>\n      )}\n      {current === steps.length - 1 && (\n        <Form.Item {...tailFormItemLayout}>\n          <Button type='primary' htmlType='submit'>\n            Submit\n          </Button>\n        </Form.Item>\n      )}\n      {current < steps.length - 1 && (\n        <Button type='primary' onClick={() => next()}>\n          Next\n        </Button>\n      )}\n    </Form>\n  )\n}\n\nexport default IntakeForm\n","import {\n  DataTableCell,\n  Table,\n  TableBody,\n  TableCell,\n  TableHeader\n} from '@david.kucsai/react-pdf-table'\nimport { Document, Page, StyleSheet, Text, View } from '@react-pdf/renderer'\nimport React, { FC } from 'react'\nimport { ClientViewModel } from './types'\n\nconst IntakeReport: FC<{ client: ClientViewModel }> = ({ client }) => {\n  const {\n    clientName,\n    languages,\n    DOB,\n    DOI,\n    SSN,\n    phoneNumber,\n    address,\n    email,\n    spouse,\n    emergencyContactName = '',\n    emergencyContactPhone = '',\n    emergencyContactRelation = '',\n    PIPUMUIMClaimNo,\n    PIPName,\n    PIPPhone,\n    PIPPolicyNumber,\n    AdverseClaimNumber,\n    AdverseName,\n    AdversePhone,\n    AdversePolicyNumber,\n    HI,\n    LW,\n    injuriesIntake,\n    priors,\n    AdverseMMY,\n    PDResolved,\n    PIPCoverage,\n    referred,\n    PRCaseNo,\n    PRCityAndInfo,\n    WC,\n    airbags,\n    gov,\n    hasPD,\n    passengers,\n    theoryOfLiab,\n    timeOfIncident,\n    PIPMMY,\n    HHS,\n    criminalHist,\n    employer,\n    howHear,\n    wage,\n    whoIntake,\n    loanOwner,\n    tow,\n    treatment,\n  } = client\n  return (\n    <Document>\n      <Page size='A4' style={s.page}>\n        {/* pip */}\n\n        <Text style={s.title}>Client</Text>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Full name: {clientName}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Language: {languages}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Phone: {phoneNumber}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Email: {email}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>D.O.B: {DOB}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>SSN: {SSN}</Text>\n            </View>\n          </View>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Legal spouse: {spouse}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>\n                Emergency contact:{' '}\n                {`${emergencyContactName} ${\n                  emergencyContactRelation\n                    ? `(${emergencyContactRelation})`\n                    : ''\n                } ${emergencyContactPhone}`}\n              </Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Address: {address}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Diagram(maps) and # of cars involved: </Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={{ marginBottom: '60px' }} />\n\n        <Text style={s.title}>Insurance</Text>\n\n        <View style={s.tableCont}>\n          <Table\n            data={[\n              {\n                PIPName,\n                PIPPhone,\n                PIPPolicyNumber,\n                PIPUMUIMClaimNo,\n              },\n            ]}\n          >\n            <TableHeader>\n              <TableCell style={s.tableHead}>PIP</TableCell>\n              <TableCell style={s.tableHead}>Phone Number</TableCell>\n              <TableCell style={s.tableHead}>Policy Number</TableCell>\n              <TableCell style={s.tableHead}>Claim Number</TableCell>\n            </TableHeader>\n            <TableBody>\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPName}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPPhone}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPPolicyNumber}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.PIPUMUIMClaimNo}\n              />\n            </TableBody>\n          </Table>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Make/Model/yr: {PIPMMY}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Coverage: {PIPCoverage}</Text>\n            </View>\n          </View>\n        </View>\n\n        {/* Liab */}\n        <View style={s.tableCont}>\n          <Table\n            data={[\n              {\n                AdverseName,\n                AdversePhone,\n                AdversePolicyNumber,\n                AdverseClaimNumber,\n              },\n            ]}\n          >\n            <TableHeader>\n              <TableCell style={s.tableHead}>Adverse Ins</TableCell>\n              <TableCell style={s.tableHead}>Phone Number</TableCell>\n              <TableCell style={s.tableHead}>Policy Number</TableCell>\n              <TableCell style={s.tableHead}>Claim Number</TableCell>\n            </TableHeader>\n            <TableBody>\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdverseName}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdversePhone}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdversePolicyNumber}\n              />\n              <DataTableCell\n                style={s.tableCell}\n                getContent={(r) => r.AdverseClaimNumber}\n              />\n            </TableBody>\n          </Table>\n\n          <View style={s.sep} />\n          <Text style={s.text}>Make/Model/yr: {AdverseMMY}</Text>\n        </View>\n\n        <View style={{ marginBottom: '8px' }} />\n\n        <Text style={s.title}>Accident</Text>\n        <View>\n          <Text style={s.text}>Theory of liability: {theoryOfLiab}</Text>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 3 }}>\n              <Text style={s.text}>Passengers: {passengers}</Text>\n            </View>\n            <View style={{ flex: 1 }} />\n            <View style={{ flex: 2 }}>\n              <Text style={s.text}>D.O.I: {DOI}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 3 }}>\n              <Text style={s.text}>PR info: {PRCityAndInfo}</Text>\n            </View>\n            <View style={{ flex: 1 }} />\n            <View style={{ flex: 2 }}>\n              <Text style={s.text}>PR case #: {PRCaseNo}</Text>\n            </View>\n          </View>\n\n          <View style={s.sep} />\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Has PD?: {hasPD}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>PD resolved?: {PDResolved}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Time: {timeOfIncident}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Airbags deployed?: {airbags}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Is WC?: {WC}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Is Gov?: {gov}</Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={{ marginBottom: '8px' }} />\n\n        <Text style={s.title}>Medical</Text>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 2 }}>\n            <Text style={s.text}>HI: {HI}</Text>\n          </View>\n          <View style={{ flex: 3 }}>\n            <Text style={s.text}>Pior medical history: {priors}</Text>\n          </View>\n          <View style={{ flex: 1 }} />\n        </View>\n        <Text style={s.text}>Injuries: {injuriesIntake}</Text>\n        <Text style={s.text}>Treatment: {treatment}</Text>\n\n        <View style={{ marginBottom: '8px' }} />\n\n        <Text style={s.title}>Other</Text>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>LW?: {LW}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Employer: {employer}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Wage: {wage}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Referred to/by: {referred}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>HHS: {HHS}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Intake by: {whoIntake}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 3 }}>\n              <Text style={s.text}>Criminal hist: {criminalHist}</Text>\n            </View>\n            <View style={{ flex: 1 }} />\n            <View style={{ flex: 2 }}>\n              <Text style={s.text}>How did you hear about us?: {howHear}</Text>\n            </View>\n          </View>\n\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>Loan/owner of car? {loanOwner}</Text>\n            </View>\n            <View style={{ flex: 1 }}>\n              <Text style={s.text}>\n                Towed/tow yard?:\n                {tow}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\n// Create styles\nconst s = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    padding: '8px',\n  },\n  sep: {\n    marginBottom: '5px',\n  },\n  text: {\n    fontSize: 12,\n    marginBottom: '8px',\n  },\n  title: {\n    fontSize: 20,\n    marginBottom: '10px',\n    borderBottom: 1,\n    borderBottomColor: 'gainsboro',\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  tableCell: {\n    padding: '2px 0 2px 4px',\n    textAlign: 'center',\n    fontSize: 12,\n  },\n  tableHead: {\n    padding: '2px 0 2px 4px',\n    textAlign: 'center',\n    fontSize: 12,\n  },\n  tableCont: {\n    paddingBottom: '8px',\n  },\n})\n\nexport default IntakeReport\n","import { message } from 'antd'\nimport React, { FC, useEffect, useRef, useState } from 'react'\nimport { CodeInput } from 'react-rainbow-components'\n\ninterface LoginProps {\n  setIsLoggedIn: Function\n  login: Function\n}\n\nconst Login: FC<LoginProps> = ({ setIsLoggedIn, login }) => {\n  const [code, setCode] = useState<string>('')\n  const codeRef = useRef<any>(null)\n  const [codeInvalid, setCodeInvalid] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (codeRef) {\n      codeRef.current.focus()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (code.length === 4) {\n      if (code === '3729') {\n        setCodeInvalid(false)\n        message.success('Welcome Clay')\n        login('Clay')\n        return setIsLoggedIn(true)\n      } else if (code === '01640') {\n        setCodeInvalid(false)\n        login('Leslie')\n        message.success('Welcome Leslie')\n        return setIsLoggedIn(true)\n      } else if (code === '1934') {\n        setCodeInvalid(false)\n        login('Jacob')\n        message.success('Welcome Jacob')\n        return setIsLoggedIn(true)\n      } else {\n        setCodeInvalid(true)\n      }\n    } else {\n      setCodeInvalid(false)\n    }\n  }, [code, setIsLoggedIn])\n\n  return (\n    <div className='login_root'>\n      <CodeInput\n        label='Enter your Code'\n        error={codeInvalid && 'Looks like the code is invalid'}\n        onChange={setCode}\n        value={code}\n        ref={codeRef}\n      />\n    </div>\n  )\n}\n\nexport default Login\n","import { PDFDownloadLink } from '@react-pdf/renderer'\nimport { Button } from 'antd'\nimport React, { useState } from 'react'\nimport './App.css'\nimport IntakeForm from './IntakeFormPage'\nimport IntakeReport from './IntakeReport'\nimport Login from './Login'\nimport { ClientViewModel, CommonCaseData } from './types'\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false)\n  const [currentUser, setCurrentUser] = useState<string>('')\n  const [isIntakeReportPage, setIsIntakeReportPage] = useState<boolean>(false)\n  const [client, setClient] = useState<ClientViewModel>()\n  const [defaultValues, setDefaultValues] = useState<CommonCaseData>()\n\n  const onSubmit = (\n    client: ClientViewModel,\n    commonCaseData: CommonCaseData\n  ) => {\n    console.log(client, 'client')\n    setClient(client)\n    setDefaultValues({ ...commonCaseData })\n    setIsIntakeReportPage(true)\n  }\n\n  const login = (username: string) => {\n    setCurrentUser(username)\n    setDefaultValues({ ...defaultValues, whoIntake: username })\n  }\n\n  return (\n    <div className='App'>\n      {!isIntakeReportPage ? (\n        isLoggedIn ? (\n          <IntakeForm onSubmit={onSubmit} defaultValues={defaultValues} />\n        ) : (\n          <Login setIsLoggedIn={setIsLoggedIn} login={login} />\n        )\n      ) : (\n        <div>\n          <div>\n            <Button>\n              <PDFDownloadLink\n                document={<IntakeReport client={client} />}\n                fileName={`${client.clientName.replaceAll(' ', '_')}.pdf`}\n              >\n                {({ blob, url, loading, error }) =>\n                  loading ? 'Loading document...' : 'Download Report'\n                }\n              </PDFDownloadLink>\n            </Button>\n            or\n            <Button onClick={() => setIsIntakeReportPage(false)}>\n              New Case Intake\n            </Button>\n            <Button onClick={() => setIsIntakeReportPage(false)}>\n              Same Case, new Person\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}